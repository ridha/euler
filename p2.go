// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

package main

import "fmt"

func fibonacci(num int, yield chan int) {

	for a, b := 1, 1; a <= num; a, b = a+b, a {
		yield <- a
	}
	close(yield)
}

func main() {

	sum := 0
	yield := make(chan int)

	go fibonacci(4e6, yield)

	for c := range yield {
		if c%2 == 0 {
			sum = sum + c
		}
	}
	fmt.Printf("Sum of all even fibonnaci sequence terms < 4e6 = %d\n", sum)
}
